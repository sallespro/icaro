{"version":3,"sources":["webpack:///./src/components/Layout.js","webpack:///./src/pages/fotos.js"],"names":["Layout","children","useSiteMetadata","title","pages","description","usePathList","className","type","aria-label","viewBox","fillRule","d","to","map","page","index","key","path","replace","pics","useStaticQuery","allFile","edges","image","node","childImageSharp","fluid","src","style"],"mappings":"6FAAA,yEAuEeA,IAjEA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACAC,cAAvBC,EADuB,EACvBA,MACFC,GAFyB,EAChBC,YACDC,eAEd,OACE,oCACE,kBAAC,IAAD,MACA,gCACE,yBAAKC,UAAU,mBACb,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,uCACb,yBAAKA,UAAU,0CACZJ,IAIL,yBAAKI,UAAU,kBACb,4BACEC,KAAK,SACLD,UAAU,2EACVE,aAAW,eAEX,yBAAKC,QAAQ,YAAYH,UAAU,wBACjC,0BACEI,SAAS,UACTC,EAAE,2HAOZ,yBAAKL,UAAU,wCACb,kBAAC,OAAD,CACEA,UAAU,8EACVM,GAAG,KAFL,QAOCT,EAAMU,KAAI,SAACC,EAAMC,GAAP,OACT,yBAAKC,IAAKD,GACR,kBAAC,OAAD,CACET,UAAU,8EACVM,GAAIE,EAAKG,MAERH,EAAKG,KAAKC,QAAQ,WAAY,cAS9ClB,K,kCC/DP,6EAqBe,qBACb,IAkDMmB,EAlDOC,yBAAe,cAkDVC,QAAQC,MAC1B,OACE,kBAAC,IAAD,KACE,yBAAKhB,UAAU,yDACda,EAAKN,KAAI,SAAAU,GAAK,OACZ,yBAAKP,IAAKO,EAAMC,KAAKC,gBAAgBC,MAAMC,KAC1C,kBAAC,IAAD,CACEX,IAAKO,EAAMC,KAAKC,gBAAgBC,MAAMC,IACtCD,MAAOH,EAAMC,KAAKC,gBAAgBC,MAClCE,MAAO,CAAE,aAAiB","file":"component---src-pages-fotos-js-ceabcc0bfc8c6ea9d1fd.js","sourcesContent":["import React from \"react\"\nimport SEO from \"./SEO\"\nimport { Link } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/useSiteMetadata\"\nimport usePathList from \"../hooks/usePathList\"\n\nconst Layout = ({ children }) => {\n  const { title, description } = useSiteMetadata()\n  const pages = usePathList()\n\n  return (\n    <>\n      <SEO />\n      <header>\n        <nav className=\"bg-white shadow\">\n          <div className=\"container mx-auto px-6 py-3 \">\n            <div className=\"md:flex md:items-center md:justify-between\">\n              <div className=\"flex justify-between items-center\">\n                <div className=\"text-xl font-semibold text-gray-700\">\n                  <div className=\"inline text-gray-700 text-xl font-bold\">\n                    {title}\n                  </div>\n                </div>\n\n                <div className=\"flex md:hidden\">\n                  <button\n                    type=\"button\"\n                    className=\"text-gray-500 hover:text-gray-600 focus:outline-none focus:text-gray-600\"\n                    aria-label=\"toggle menu\"\n                  >\n                    <svg viewBox=\"0 0 24 24\" className=\"h-6 w-6 fill-current\">\n                      <path\n                        fillRule=\"evenodd\"\n                        d=\"M4 5h16a1 1 0 0 1 0 2H4a1 1 0 1 1 0-2zm0 6h16a1 1 0 0 1 0 2H4a1 1 0 0 1 0-2zm0 6h16a1 1 0 0 1 0 2H4a1 1 0 0 1 0-2z\"\n                      ></path>\n                    </svg>\n                  </button>\n                </div>\n              </div>\n\n              <div className=\"hidden -mx-4 md:flex md:items-center\">\n                <Link\n                  className=\"block mx-4 mt-2 md:mt-0 text-sm text-gray-700 capitalize hover:text-red-600\"\n                  to=\"/\"\n                >\n                  home\n                </Link>\n\n                {pages.map((page, index) => (\n                  <div key={index}>\n                    <Link\n                      className=\"block mx-4 mt-2 md:mt-0 text-sm text-gray-700 capitalize hover:text-red-600\"\n                      to={page.path}\n                    >\n                      {page.path.replace(/^\\/|\\/$/g, \"\")}\n                    </Link>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </nav>\n      </header>\n      {children}\n      {/* <footer className=\"py-2 text-center text-gray-600 text-xs\">\n        &copy; 2022 - {description}\n      </footer> */}\n    </>\n  )\n}\n\nexport default Layout\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport Layout from \"../components/Layout\"\n\n/*\n  1. write query \n  2. pass data into img component\n*/\n\nexport const squareImage = graphql`\n  fragment squareImage on File {\n    childImageSharp {\n      fluid(maxWidth: 320, maxHeight: 180) {\n        ...GatsbyImageSharpFluid\n      }\n    }\n  }\n`\n\nexport default () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allFile (limit: 8, filter: {sourceInstanceName: {eq: \"backgrounds\"}}){\n        edges {\n            node {\n              relativePath\n              childImageSharp {\n                fluid (maxWidth: 1920, quality: 100){\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n      }\n          }\n      # allFile(\n      #   filter: {\n      #     extension: { regex: \"/(jpg)|(png)|(tif)|(tiff)|(webp)|(jpeg)/\" }\n      #     absolutePath: { regex: \"/(jpeg)/\" }\n      #   }\n      # ) {\n      #   totalCount\n      #   edges {\n      #     node {\n      #       name\n      #       ...squareImage\n      #       # childImageSharp {\n      #       #   fluid(maxWidth: 915, quality: 70) {\n      #       #     aspectRatio\n      #       #     ...GatsbyImageSharpFluid_withWebp\n      #       #   }\n      #       # }\n      #     }\n      #   }\n      # }\n      file( \n       \n        relativePath: { eq: \"about.jpg\" }) {\n        ...squareImage\n        # childImageSharp {\n        #   fluid {\n        #     base64\n        #     aspectRatio\n        #     src\n        #     srcSet\n        #     sizes\n        #   }\n        # }\n      }\n    }\n  `)\n  const pics = data.allFile.edges\n  return (\n    <Layout>\n      <div className=\"grid grid-flow-col grid-rows-2 grid-cols-3 gap-8 p-8 \">\n      {pics.map(image => (\n         <div key={image.node.childImageSharp.fluid.src}>\n          <Img\n            key={image.node.childImageSharp.fluid.src}\n            fluid={image.node.childImageSharp.fluid}\n            style={{ 'borderRadius' : '1rem' }}\n          />\n        </div>\n      ))}\n      {/* <Img fluid={data.file.childImageSharp.fluid} alt=\"about\" /> */}\n      </div>\n    </Layout>\n  )\n}\n"],"sourceRoot":""}