{"version":3,"sources":["webpack:///./src/pages/photos.js"],"names":["pics","useStaticQuery","allFile","edges","className","map","image","key","node","childImageSharp","fluid","src","style","href","type"],"mappings":"6FAAA,6EAqBe,qBACb,IAkDMA,EAlDOC,yBAAe,cAkDVC,QAAQC,MAC1B,OACE,kBAAC,IAAD,KACE,yBAAKC,UAAU,yDACZJ,EAAKK,KAAI,SAAAC,GAAK,OACb,yBAAKC,IAAKD,EAAME,KAAKC,gBAAgBC,MAAMC,KACzC,kBAAC,IAAD,CACEJ,IAAKD,EAAME,KAAKC,gBAAgBC,MAAMC,IACtCD,MAAOJ,EAAME,KAAKC,gBAAgBC,MAClCE,MAAO,CAAE,aAAgB,cAK/B,uBAAGR,UAAU,wEACXS,KAAK,sFAGL,4BACET,UAAU,2HACVU,KAAK,UAFP","file":"component---src-pages-photos-js-e1fe2ac4a6af98f692ac.js","sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport Layout from \"../components/Layout\"\n\n/*\n  1. write query \n  2. pass data into img component\n*/\n\nexport const squareImage = graphql`\n  fragment squareImage on File {\n    childImageSharp {\n      fluid(maxWidth: 320, maxHeight: 180) {\n        ...GatsbyImageSharpFluid\n      }\n    }\n  }\n`\n\nexport default () => {\n  const data = useStaticQuery(graphql`\n    query { \n      allFile (limit: 30, filter: {sourceInstanceName: {eq: \"backgrounds\"}}){\n        edges {\n            node {\n              relativePath\n              childImageSharp {\n                fluid (maxWidth: 1920, quality: 100){\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n      }\n          }\n      # allFile(\n      #   filter: {\n      #     extension: { regex: \"/(jpg)|(png)|(tif)|(tiff)|(webp)|(jpeg)/\" }\n      #     absolutePath: { regex: \"/(jpeg)/\" }\n      #   }\n      # ) {\n      #   totalCount\n      #   edges {\n      #     node {\n      #       name\n      #       ...squareImage\n      #       # childImageSharp {\n      #       #   fluid(maxWidth: 915, quality: 70) {\n      #       #     aspectRatio\n      #       #     ...GatsbyImageSharpFluid_withWebp\n      #       #   }\n      #       # }\n      #     }\n      #   }\n      # }\n      file( \n       \n        relativePath: { eq: \"about.jpg\" }) {\n        ...squareImage\n        # childImageSharp {\n        #   fluid {\n        #     base64\n        #     aspectRatio\n        #     src\n        #     srcSet\n        #     sizes\n        #   }\n        # }\n      }\n    }\n  `)\n  const pics = data.allFile.edges\n  return (\n    <Layout>\n      <div className=\"grid grid-flow-col grid-rows-4 grid-cols-3 gap-8 p-8 \">\n        {pics.map(image => (\n          <div key={image.node.childImageSharp.fluid.src}>\n            <Img\n              key={image.node.childImageSharp.fluid.src}\n              fluid={image.node.childImageSharp.fluid}\n              style={{ 'borderRadius': '1rem' }}\n            />\n          </div>\n        ))}\n\n        <a className=\"inline-block text-sm text-blue-500 align-baseline hover:text-blue-800\"\n          href=\"https://drive.google.com/file/d/13cqnfFM44reXQ9ShDfTQsqwMLilhy5NT/view?usp=sharing\">\n          {/* https://drive.google.com/uc?export=download&id=13cqnfFM44reXQ9ShDfTQsqwMLilhy5NT */}\n\n          <button\n            className=\"w-full px-4 py-2 font-bold text-white bg-blue-500 rounded-full hover:bg-blue-700 focus:outline-none focus:shadow-outline\"\n            type=\"button\"\n          >\n            Download Photos\n          </button></a>\n        {/* <Img fluid={data.file.childImageSharp.fluid} alt=\"about\" /> */}\n      </div>\n    </Layout>\n  )\n}\n"],"sourceRoot":""}